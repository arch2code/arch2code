# Four tests that runs on an Ubuntu image with all tools to produce document, code, and diagram outputs
#    Should help catch basic errors in python code or yaml changes in the example
options:
  max-time: 15
image: qistor/qi-dev:v2.030
pipelines:
  default:
    - step:
        name: Diagram, SystemC, SystemVerilog lint
        script:
          - pip3 install -r ./requirements.txt
          # diagram output for mixed and nested
          # Build nested SystemC
          # Build hellowWorld SystemC
          # Lint mixed in SystemVerilog using verilator, build SystemC, run quick mixed SystemC + SystemVerilog sim
          # Lint axi example in SystemVerilog using verilator
          # Lint apbDecode in SystemVerilog using verilator, build SystemC, run quick mixed SystemC + SystemVerilog sim
          # inAndOut; build, lint, execute simple test (SystemVerilog only)
          ##  a -j will cause a failure because the diagram-and-doc rule depends on db files from
          ##  mixed and nested architectures
          - make pipeline-test
          # Check the repo to see if files have been updated or if untracked files have been created, fail if this
          #   this build step creates edited tracked files or creates untracked files
          #   reference: https://stackoverflow.com/a/10457902/8980882
          - if [ -z "$(git status --porcelain)" ]; then (exit 0); else echo "Repo not clean after build"; git status; git diff; (exit 1); fi
  pull-requests:
    '**': #this runs as default for any branch not elsewhere defined
      - step:
          # First step can not be manual triggered
          name: Dummy Step
          script:
            - echo ${BITBUCKET_PR_DESTINATION_BRANCH}
            - echo ${BITBUCKET_BRANCH}
      - step:
          name: Document Build
          deployment: staging
          trigger: manual
          script:
            - if [ "${BITBUCKET_PR_DESTINATION_BRANCH}" != "main" ]; then printf 'not a target branch we want to check'; exit; fi
            - pip3 install -r ./requirements.txt
            - make doc-hash
            - make doc-build
          artifacts:
            - document/build/**
      - step:
          name: Document Deploy
          deployment: production
          trigger: manual
          script:
            - if [ "${BITBUCKET_PR_DESTINATION_BRANCH}" != "main" ]; then printf 'not a target branch we want to check'; exit; fi
            - pipe: atlassian/scp-deploy:1.2.1
              variables:
                USER: $USER
                SERVER: $SERVER
               #DEBUG: 'true'
                REMOTE_PATH: '~/public_html/docs.$SERVER/'
                LOCAL_PATH: 'document/build/*'
                EXTRA_ARGS: ["-P", "$SSH_PORT"]
